<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hfbin Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-03T17:11:28.239Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>HuangFuBin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>shiro 简介</title>
    <link href="http://yoursite.com/2017/11/04/shiro%20%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2017/11/04/shiro 简介/</id>
    <published>2017-11-04T09:22:01.000Z</published>
    <updated>2017-11-03T17:11:28.239Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最新资讯"><a href="#最新资讯" class="headerlink" title="最新资讯"></a><strong>最新资讯</strong></h4><p>近日，在微软亚洲研究院与哈工大共同举办的第十九届“二十一世纪的计算”国际学术研讨会上， Peter Lee 博士作为微软全球资深副总裁， 也来到了现场。AI科技大本营非常有幸采访到这位微软研究院的核心领导之一。对话中，Peter Lee透露了很多信息。谈到微软在 AI 研究和 AI 产业化方面布局这个问题时，他表示微软对新技术、新机会非常重视，投入得非常多，微软现在领先 20 年。</p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h4><p>1、Apache Shiro 是Java  的一个安全（权限）框架<br>2、Shiro 可以非常容易的开发出足够好的应用，其不仅可以用在JavaSE环境，也可以用JavaEE环境。<br>3、Shiro可以完成：认证、授权、加密、会话管理、与Web 集成、缓存等。<br>4、下载：<a href="http://shiro.apache.org/" target="_blank" rel="external">http://shiro.apache.org/</a></p><h4 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a><strong>功能介绍</strong></h4><p>基本功能点如下图所示：<br><img src="http://img.blog.csdn.net/20171102010351553?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>•    <em>Authentication</em>：身份认证/登录，验证用户是不是拥有相应的身份；</p><p>•    <em>Authorization</em>：授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用户是否能进行什么操作，如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用户对某个资源是否具有某个权限；</p><p>•    <em>Session Manager</em>：会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信息都在会话中；会话可以是普通 JavaSE 环境，也可以是 Web 环境的；</p><p>•    <em>Cryptography</em>：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储；</p><p>•    <em>Web Support</em>：Web 支持，可以非常容易的集成到Web 环境；</p><p>•    <em>Caching</em>：缓存，比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可以提高效率；</p><p>•    <em>Concurrency</em>：Shiro 支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能把权限自动传播过去；</p><p>•    <em>Testing</em>：提供测试支持；</p><p>•    <em>Run As</em>：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；</p><p>•    <em>Remember Me</em>：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录了</p><h4 id="Shrio架构（shiro外部来看）"><a href="#Shrio架构（shiro外部来看）" class="headerlink" title="Shrio架构（shiro外部来看）"></a><strong>Shrio架构（shiro外部来看）</strong></h4><p>从外部来看Shiro，即从应用程序角度的来观察如何使Shiro完成工作：<br><img src="http://img.blog.csdn.net/20171102011002654?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>•    Subject：应用代码直接交互的对象是 Subject，也就是说 Shiro 的对外API 核心就是 Subject。Subject 代表了当前“用户”， 这个用户不一定是一个具体的人，与当前应用交互的任何东西都是 Subject，如网络爬虫，机器人等；与 Subject  的所有交互都会委托给 SecurityManager；Subject 其实是一个门面，SecurityManager 才是实际的执行者；</p><p>•    SecurityManager：安全管理器；即所有与安全有关的操作都会与SecurityManager 交互；且其管理着所有 Subject；可以看出它是 Shiro 的核心，它负责与 Shiro 的其他组件进行交互，它相当于 SpringMVC 中DispatcherServlet 的角色</p><p>•    Realm：Shiro 从 Realm 获取安全数据（如用户、角色、权限），就是说SecurityManager 要验证用户身份，那么它需要从 Realm 获取相应的用户进行比较以确定用户身份是否合法；也需要从 Realm 得到用户相应的角色/ 权限进行验证用户是否能进行操作；可以把 Realm 看成 DataSource</p><h4 id="Shrio架构（shiro内部来看）"><a href="#Shrio架构（shiro内部来看）" class="headerlink" title="Shrio架构（shiro内部来看）"></a><strong>Shrio架构（shiro内部来看）</strong></h4><p><img src="http://img.blog.csdn.net/20171102011453690?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>•    Subject：任何可以与应用交互的“用户”；</p><p>•    SecurityManager ：相当于SpringMVC 中的 DispatcherServlet；是 Shiro 的心脏；所有具体的交互都通过 SecurityManager 进行控制；它管理着所有 Subject、且负责进行认证、授权、会话及缓存的管理。</p><p>•    Authenticator：负责 Subject 认证，是一个扩展点，可以自定义实现；可以使用认证策略（Authentication Strategy），即什么情况下算用户认证通过了；</p><p>•    Authorizer：授权器、即访问控制器，用来决定主体是否有权限进行相应的操作；即控制着用户能访问应用中的哪些功能；</p><p>•    Realm：可以有 1 个或多个 Realm，可以认为是安全实体数据源，即用于获取安全实体的；可以是JDBC 实现，也可以是内存实现等等；由用户提供；所以一般在应用中都需要实现自己的 Realm；</p><p>•    SessionManager：管理 Session 生命周期的组件；而 Shiro 并不仅仅可以用在 Web 环境，也可以用在如普通的 JavaSE 环境</p><p>•    CacheManager：缓存控制器，来管理如用户、角色、权限等的缓存的；因为这些数据基本上很少改变，放到缓存中后可以提高访问的性能</p><p>•    Cryptography：密码模块，Shiro 提高了一些常见的加密组件用于如密码加密/解密。</p><h4 id="Shiro—HelloWorld"><a href="#Shiro—HelloWorld" class="headerlink" title="Shiro—HelloWorld"></a><strong>Shiro—HelloWorld</strong></h4><p>这个 HelloWorld 是在shiro官方参考文档拿出来的</p><p><img src="http://img.blog.csdn.net/20171102013026626?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>log4j.properties<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">log4j.rootLogger=INFO, stdout</div><div class="line"></div><div class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</div><div class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</div><div class="line">log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m %n</div><div class="line"></div><div class="line"># General Apache libraries</div><div class="line">log4j.logger.org.apache=WARN</div><div class="line"></div><div class="line"># Spring</div><div class="line">log4j.logger.org.springframework=WARN</div><div class="line"></div><div class="line"># Default Shiro logging</div><div class="line">log4j.logger.org.apache.shiro=TRACE</div><div class="line"></div><div class="line"># Disable verbose logging</div><div class="line">log4j.logger.org.apache.shiro.util.ThreadContext=WARN</div><div class="line">log4j.logger.org.apache.shiro.cache.ehcache.EhCache=WARN</div></pre></td></tr></table></figure></p><p>shiro.imi<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">#</div><div class="line"># Licensed to the Apache Software Foundation (ASF) under one</div><div class="line"># or more contributor license agreements.  See the NOTICE file</div><div class="line"># distributed with this work for additional information</div><div class="line"># regarding copyright ownership.  The ASF licenses this file</div><div class="line"># to you under the Apache License, Version 2.0 (the</div><div class="line"># &quot;License&quot;); you may not use this file except in compliance</div><div class="line"># with the License.  You may obtain a copy of the License at</div><div class="line">#</div><div class="line">#     http://www.apache.org/licenses/LICENSE-2.0</div><div class="line">#</div><div class="line"># Unless required by applicable law or agreed to in writing,</div><div class="line"># software distributed under the License is distributed on an</div><div class="line"># &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY</div><div class="line"># KIND, either express or implied.  See the License for the</div><div class="line"># specific language governing permissions and limitations</div><div class="line"># under the License.</div><div class="line">#</div><div class="line"># =============================================================================</div><div class="line"># Quickstart INI Realm configuration</div><div class="line">#</div><div class="line"># For those that might not understand the references in this file, the</div><div class="line"># definitions are all based on the classic Mel Brooks&apos; film &quot;Spaceballs&quot;. ;)</div><div class="line"># =============================================================================</div><div class="line"></div><div class="line"># -----------------------------------------------------------------------------</div><div class="line"># Users and their assigned roles</div><div class="line">#</div><div class="line"># Each line conforms to the format defined in the</div><div class="line"># org.apache.shiro.realm.text.TextConfigurationRealm#setUserDefinitions JavaDoc</div><div class="line"># -----------------------------------------------------------------------------</div><div class="line">[users]</div><div class="line"># user &apos;root&apos; with password &apos;secret&apos; and the &apos;admin&apos; role</div><div class="line">root = secret, admin</div><div class="line"># user &apos;guest&apos; with the password &apos;guest&apos; and the &apos;guest&apos; role</div><div class="line">guest = guest, guest</div><div class="line"># user &apos;presidentskroob&apos; with password &apos;12345&apos; (&quot;That&apos;s the same combination on</div><div class="line"># my luggage!!!&quot; ;)), and role &apos;president&apos;</div><div class="line">presidentskroob = 12345, president</div><div class="line"># user &apos;darkhelmet&apos; with password &apos;ludicrousspeed&apos; and roles &apos;darklord&apos; and &apos;schwartz&apos;</div><div class="line">darkhelmet = ludicrousspeed, darklord, schwartz</div><div class="line"># user &apos;lonestarr&apos; with password &apos;vespa&apos; and roles &apos;goodguy&apos; and &apos;schwartz&apos;</div><div class="line">lonestarr = vespa, goodguy, schwartz</div><div class="line"></div><div class="line"># -----------------------------------------------------------------------------</div><div class="line"># Roles with assigned permissions</div><div class="line"># </div><div class="line"># Each line conforms to the format defined in the</div><div class="line"># org.apache.shiro.realm.text.TextConfigurationRealm#setRoleDefinitions JavaDoc</div><div class="line"># -----------------------------------------------------------------------------</div><div class="line">[roles]</div><div class="line"># &apos;admin&apos; role has all permissions, indicated by the wildcard &apos;*&apos;</div><div class="line">admin = *</div><div class="line"># The &apos;schwartz&apos; role can do anything (*) with any lightsaber:</div><div class="line">schwartz = lightsaber:*</div><div class="line"># The &apos;goodguy&apos; role is allowed to &apos;delete&apos; (action) the user (type) with</div><div class="line"># license plate &apos;zhangsan&apos; (instance specific id)</div><div class="line">goodguy = user:delete:zhangsan</div></pre></td></tr></table></figure></p><p>Quickstart.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.atguigu.shiro.helloworld;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.authc.*;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.session.Session;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;</div><div class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;</div><div class="line"><span class="keyword">import</span> org.slf4j.Logger;</div><div class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * Simple Quickstart application showing how to use Shiro's API.</span></div><div class="line"><span class="comment"> *</span></div><div class="line"><span class="comment"> * <span class="doctag">@since</span> 0.9 RC2</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Quickstart</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">transient</span> Logger log = LoggerFactory.getLogger(Quickstart.class);</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// The easiest way to create a Shiro SecurityManager with configured</span></div><div class="line">        <span class="comment">// realms, users, roles and permissions is to use the simple INI config.</span></div><div class="line">        <span class="comment">// We'll do that by using a factory that can ingest a .ini file and</span></div><div class="line">        <span class="comment">// return a SecurityManager instance:</span></div><div class="line"></div><div class="line">        <span class="comment">// Use the shiro.ini file at the root of the classpath</span></div><div class="line">        <span class="comment">// (file: and url: prefixes load from files and urls respectively):</span></div><div class="line">        Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">"classpath:shiro.ini"</span>);</div><div class="line">        SecurityManager securityManager = factory.getInstance();</div><div class="line"></div><div class="line">        <span class="comment">// for this simple example quickstart, make the SecurityManager</span></div><div class="line">        <span class="comment">// accessible as a JVM singleton.  Most applications wouldn't do this</span></div><div class="line">        <span class="comment">// and instead rely on their container configuration or web.xml for</span></div><div class="line">        <span class="comment">// webapps.  That is outside the scope of this simple quickstart, so</span></div><div class="line">        <span class="comment">// we'll just do the bare minimum so you can continue to get a feel</span></div><div class="line">        <span class="comment">// for things.</span></div><div class="line">        SecurityUtils.setSecurityManager(securityManager);</div><div class="line"></div><div class="line">        <span class="comment">// Now that a simple Shiro environment is set up, let's see what you can do:</span></div><div class="line"></div><div class="line">        <span class="comment">// get the currently executing user:</span></div><div class="line">        <span class="comment">// 获取当前的 Subject. 调用 SecurityUtils.getSubject();</span></div><div class="line">        Subject currentUser = SecurityUtils.getSubject();</div><div class="line"></div><div class="line">        <span class="comment">// Do some stuff with a Session (no need for a web or EJB container!!!)</span></div><div class="line">        <span class="comment">// 测试使用 Session </span></div><div class="line">        <span class="comment">// 获取 Session: Subject#getSession()</span></div><div class="line">        Session session = currentUser.getSession();</div><div class="line">        session.setAttribute(<span class="string">"someKey"</span>, <span class="string">"aValue"</span>);</div><div class="line">        String value = (String) session.getAttribute(<span class="string">"someKey"</span>);</div><div class="line">        <span class="keyword">if</span> (value.equals(<span class="string">"aValue"</span>)) &#123;</div><div class="line">            log.info(<span class="string">"---&gt; Retrieved the correct value! ["</span> + value + <span class="string">"]"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// let's login the current user so we can check against roles and permissions:</span></div><div class="line">        <span class="comment">// 测试当前的用户是否已经被认证. 即是否已经登录. </span></div><div class="line">        <span class="comment">// 调动 Subject 的 isAuthenticated() </span></div><div class="line">        <span class="keyword">if</span> (!currentUser.isAuthenticated()) &#123;</div><div class="line">        <span class="comment">// 把用户名和密码封装为 UsernamePasswordToken 对象</span></div><div class="line">            UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">"lonestarr"</span>, <span class="string">"vespa"</span>);</div><div class="line">            <span class="comment">// rememberme</span></div><div class="line">            token.setRememberMe(<span class="keyword">true</span>);</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// 执行登录. </span></div><div class="line">                currentUser.login(token);</div><div class="line">            &#125; </div><div class="line">            <span class="comment">// 若没有指定的账户, 则 shiro 将会抛出 UnknownAccountException 异常. </span></div><div class="line">            <span class="keyword">catch</span> (UnknownAccountException uae) &#123;</div><div class="line">                log.info(<span class="string">"----&gt; There is no user with username of "</span> + token.getPrincipal());</div><div class="line">                <span class="keyword">return</span>; </div><div class="line">            &#125; </div><div class="line">            <span class="comment">// 若账户存在, 但密码不匹配, 则 shiro 会抛出 IncorrectCredentialsException 异常。 </span></div><div class="line">            <span class="keyword">catch</span> (IncorrectCredentialsException ice) &#123;</div><div class="line">                log.info(<span class="string">"----&gt; Password for account "</span> + token.getPrincipal() + <span class="string">" was incorrect!"</span>);</div><div class="line">                <span class="keyword">return</span>; </div><div class="line">            &#125; </div><div class="line">            <span class="comment">// 用户被锁定的异常 LockedAccountException</span></div><div class="line">            <span class="keyword">catch</span> (LockedAccountException lae) &#123;</div><div class="line">                log.info(<span class="string">"The account for username "</span> + token.getPrincipal() + <span class="string">" is locked.  "</span> +</div><div class="line">                        <span class="string">"Please contact your administrator to unlock it."</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// ... catch more exceptions here (maybe custom ones specific to your application?</span></div><div class="line">            <span class="comment">// 所有认证时异常的父类. </span></div><div class="line">            <span class="keyword">catch</span> (AuthenticationException ae) &#123;</div><div class="line">                <span class="comment">//unexpected condition?  error?</span></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//say who they are:</span></div><div class="line">        <span class="comment">//print their identifying principal (in this case, a username):</span></div><div class="line">        log.info(<span class="string">"----&gt; User ["</span> + currentUser.getPrincipal() + <span class="string">"] logged in successfully."</span>);</div><div class="line"></div><div class="line">        <span class="comment">//test a role:</span></div><div class="line">        <span class="comment">// 测试是否有某一个角色. 调用 Subject 的 hasRole 方法. </span></div><div class="line">        <span class="keyword">if</span> (currentUser.hasRole(<span class="string">"schwartz"</span>)) &#123;</div><div class="line">            log.info(<span class="string">"----&gt; May the Schwartz be with you!"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            log.info(<span class="string">"----&gt; Hello, mere mortal."</span>);</div><div class="line">            <span class="keyword">return</span>; </div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//test a typed permission (not instance-level)</span></div><div class="line">        <span class="comment">// 测试用户是否具备某一个行为. 调用 Subject 的 isPermitted() 方法。 </span></div><div class="line">        <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">"lightsaber:weild"</span>)) &#123;</div><div class="line">            log.info(<span class="string">"----&gt; You may use a lightsaber ring.  Use it wisely."</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            log.info(<span class="string">"Sorry, lightsaber rings are for schwartz masters only."</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//a (very powerful) Instance Level permission:</span></div><div class="line">        <span class="comment">// 测试用户是否具备某一个行为. </span></div><div class="line">        <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">"user:delete:zhangsan"</span>)) &#123;</div><div class="line">            log.info(<span class="string">"----&gt; You are permitted to 'drive' the winnebago with license plate (id) 'eagle5'.  "</span> +</div><div class="line">                    <span class="string">"Here are the keys - have fun!"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            log.info(<span class="string">"Sorry, you aren't allowed to drive the 'eagle5' winnebago!"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//all done - log out!</span></div><div class="line">        <span class="comment">// 执行登出. 调用 Subject 的 Logout() 方法. </span></div><div class="line">        System.out.println(<span class="string">"----&gt;"</span> + currentUser.isAuthenticated());</div><div class="line">        </div><div class="line">        currentUser.logout();</div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"----&gt;"</span> + currentUser.isAuthenticated());</div><div class="line"></div><div class="line">        System.exit(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>在这就截图运行后面打印的两个结果 , 中间的打印信息可以自己去尝试，每一个方法都有说明。</p><p><img src="http://img.blog.csdn.net/20171102013735205?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="介绍完毕-各位大佬-喜欢可以赞一下或关注一下哦"><a href="#介绍完毕-各位大佬-喜欢可以赞一下或关注一下哦" class="headerlink" title="介绍完毕  各位大佬  喜欢可以赞一下或关注一下哦"></a>介绍完毕  各位大佬  喜欢可以赞一下或关注一下哦</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;最新资讯&quot;&gt;&lt;a href=&quot;#最新资讯&quot; class=&quot;headerlink&quot; title=&quot;最新资讯&quot;&gt;&lt;/a&gt;&lt;strong&gt;最新资讯&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;近日，在微软亚洲研究院与哈工大共同举办的第十九届“二十一世纪的计算”国际学术研讨会上， P
      
    
    </summary>
    
      <category term="shiro" scheme="http://yoursite.com/categories/shiro/"/>
    
    
      <category term="shiro" scheme="http://yoursite.com/tags/shiro/"/>
    
  </entry>
  
  <entry>
    <title>hexo+gitHub搭建个人独立博客(一)</title>
    <link href="http://yoursite.com/2017/11/02/hexo+gitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2(%E4%B8%80)%20/"/>
    <id>http://yoursite.com/2017/11/02/hexo+gitHub搭建个人独立博客(一) /</id>
    <published>2017-11-02T08:37:01.000Z</published>
    <updated>2017-11-03T17:18:54.341Z</updated>
    
    <content type="html"><![CDATA[<h4 id="最新资讯"><a href="#最新资讯" class="headerlink" title="最新资讯"></a><strong>最新资讯</strong></h4><p>谷歌的一篇文章则着重说明了新成立的指导小组将如何“让MDN成为最好的Web参考文档，帮助我们更好地进行Web开发”。指导小组目前的成员包括微软、谷歌、Mozilla、三星和W3C。值得注意的是，苹果公司并没有参与这次发布声明。</p><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a><strong>前言</strong></h4><p>一直想要一个自己的独立博客，域名跟服务器到现在快买有一年了，由于种种原因最终还是没有搭建自己的博客，服务器差不多放一年了，快要发霉了。去逛gitHub时候发现好多人的项目里都有**.github.io慢慢研究，就偶然的发现Hexo这个优秀的静态博客框架，再搭配现在流行的gitHub，当然也可以放在Coding或码云，简直是完美写博客的黄金搭档（免费+方便）。我就百度好多教程，最后磕磕碰碰的搭建了起来。但是网上的教程多多少少都有点问题。就有了这个自己总结的教程，一是自己总结一下，二是给也想搭建Hexo博客的伙伴们多一点参考。</p><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a><strong>说明</strong></h4><p>我这个教程是基于window系统用户，Hexo3.4版本</p><h4 id="系统环境配置"><a href="#系统环境配置" class="headerlink" title="系统环境配置"></a><strong>系统环境配置</strong></h4><p>要使用Hexo，需要在系统中安装Nodejs以及Git，如果还没有，那就开始安装吧！</p><h5 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a><strong>安装node.js</strong></h5><p>下载链接：<a href="https://nodejs.org" target="_blank" rel="external">https://nodejs.org</a><br>安装教程就不说了！直接下一步下一步就ok了！！！</p><h5 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a><strong>安装git</strong></h5><p>下载链接：<a href="https://git-scm.com/downloads" target="_blank" rel="external">https://git-scm.com/downloads</a><br>安装教程就不说了！直接下一步下一步就ok了！！！</p><h5 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><strong>安装Hexo</strong></h5><p>安装前先介绍一些hexo常用的命令,#后面为注释。</p><blockquote><p>hexo g #完整命令为hexo generate,用于生成静态文件<br>hexo s #完整命令为hexo server,用于启动服务器<br>hexo d #完整命令为hexo deploy,用于将本地文件发布到github上<br>hexo n “FileName”#完整命令为hexo new,用于新建一篇文章</p></blockquote><p>在桌面右键出现我们刚刚安装的Git , 选择Git Base<br><img src="http://img.blog.csdn.net/20171031205837077?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>输入安装hexo命令：</p><blockquote><p>npm install -g hexo</p></blockquote><p>说明：这个需要安装一段时间</p><p>安装完成后，在系统的某一个盘下创建hexo文件夹（如D:\hexo），执行以下指令(在D:\hexo内点击鼠标右键，选择Git Bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件。</p><blockquote><p>hexo init</p></blockquote><p>安装依赖包：</p><blockquote><p>npm install</p></blockquote><p>让我们看看刚刚下载的hexo文件带来了什么</p><p><img src="http://img.blog.csdn.net/20171101211020267?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>在D:\hexo内执行以下命令：</p><blockquote><p>hexo g  #生成静态文件<br>hexo s  #启动服务器</p></blockquote><p>然后用浏览器访问<a href="http://localhost:4000，" target="_blank" rel="external">http://localhost:4000，</a> 此时，你应该看到了一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的，hexo3.0使用的默认主题是landscape。<br><img src="http://img.blog.csdn.net/20171031212643588?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>补充说明：此时有可能你启动服务会报错，一般是端口占用，可以通过如下命令更改：</p><blockquote><p>hexo server -p 5000</p></blockquote><p>通过以下命令可以查看我目前的环境：</p><blockquote><p>hexo –v</p></blockquote><p>常用的组合：</p><blockquote><p>hexo d -g #生成部署<br>hexo s -g #生成预览</p></blockquote><h4 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a><strong>GitHub</strong></h4><p>已经有Github帐号跳过此步，进入Github进行注册。</p><h5 id="创建repository"><a href="#创建repository" class="headerlink" title="创建repository"></a><strong>创建repository</strong></h5><p><img src="http://img.blog.csdn.net/20171101211141815?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>创建时，只需要填写Repository name即可，当然这个名字的格式必须为youname（你github的名字）.github.io，例如我的为hfbin.github.io</p><p><img src="http://img.blog.csdn.net/20171101211355370?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h5 id="部署本地文件到github"><a href="#部署本地文件到github" class="headerlink" title="部署本地文件到github"></a><strong>部署本地文件到github</strong></h5><p>在D:\hexo 目录中找到_config.yml , 并打开，加入如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy: </div><div class="line">  type: git</div><div class="line">  repository: git@github.com:hfbin/hfbin.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p>如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，这时你要配置一下你电脑的SSH：</p><p>根据这个路径C:\Users\HUANGFUBIN（你电脑的名字）\.ssh   如果你还没有.ssh<br>这个文件夹那就不用理往下，如果有将这个文件夹删除 ，下面会教如何生成：</p><p>输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车，出现提示让你输入的时候直接先回车，需要三次：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;1716850375@qq.com&quot;</div></pre></td></tr></table></figure></p><p><img src="http://img.blog.csdn.net/20171101224413100?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;1716850375@qq.com&quot;</div><div class="line">ssh-agent -s</div><div class="line">ssh-add ~/.ssh/id_rsa</div><div class="line">eval `ssh-agent -s`</div><div class="line">ssh-add</div><div class="line">clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure></p><p>这时候打开C:\Users\HUANGFUBIN（你电脑的名字）\.ssh  如图：<br><img src="http://img.blog.csdn.net/20171101224833684?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>打开id_rsa复制里面的内容，复制时候不要复制少 ctrl+A 全选 ctrl+C 复制，这时复制好后可以到到Github上用了：</p><p><img src="http://img.blog.csdn.net/20171101225136354?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>最后测试一下是否链接成功，键入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -T git@github.com</div></pre></td></tr></table></figure></p><p>这时候会有警告，输入“yes”就好</p><p><img src="http://img.blog.csdn.net/20171101225713788?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>继续执行下面命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p><p>如果不执行上面命令等一下执行 hexo d 会报错</p><p>以上就表示SSH配置好了，执行以下命令部署到Github上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hexo g</div><div class="line">hexo d</div></pre></td></tr></table></figure></p><p>此时可以说完工了，下面你可以访问一下yuoname(hfbin).githui.io， 就可访问到你部署在github上面的项目了</p><h4 id="发布一篇文章"><a href="#发布一篇文章" class="headerlink" title="发布一篇文章"></a><strong>发布一篇文章</strong></h4><h5 id="在Git-Bash执行命令"><a href="#在Git-Bash执行命令" class="headerlink" title="在Git Bash执行命令"></a><strong>在Git Bash执行命令</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new &quot;frist blog&quot;</div></pre></td></tr></table></figure><p>打开生成的md文件，在E:\hexo\source\_post中打开frist-blog.md 文件，hexo中写文章使用的是Markdown， Markdown编写语法有空我会写一篇文章来介绍：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">title: my new post 标题</div><div class="line">date: 2016-02-21 16:04:09 发表日期</div><div class="line">categories: blog 文章文类</div><div class="line">tags: 文章标签</div><div class="line">---</div><div class="line">#正文，用markdown写</div></pre></td></tr></table></figure><p>写完后执行命令</p><p>hexo g  #生成静态文件</p><p>部署到github上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo d</div></pre></td></tr></table></figure></p><p>访问yuoname(hfbin).githui.io  ，即可</p><h1 id="大功告成-对你有用来个赞呗-老铁们"><a href="#大功告成-对你有用来个赞呗-老铁们" class="headerlink" title="大功告成    对你有用来个赞呗  老铁们"></a>大功告成    对你有用来个赞呗  老铁们</h1><p>下一章介绍 Next 主题的使用</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;最新资讯&quot;&gt;&lt;a href=&quot;#最新资讯&quot; class=&quot;headerlink&quot; title=&quot;最新资讯&quot;&gt;&lt;/a&gt;&lt;strong&gt;最新资讯&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;谷歌的一篇文章则着重说明了新成立的指导小组将如何“让MDN成为最好的Web参考文档，帮助我
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>常见配置redis.conf介绍</title>
    <link href="http://yoursite.com/2017/11/01/%E5%B8%B8%E8%A7%81%E9%85%8D%E7%BD%AEredis.conf%E4%BB%8B%E7%BB%8D%20/"/>
    <id>http://yoursite.com/2017/11/01/常见配置redis.conf介绍 /</id>
    <published>2017-11-01T08:37:01.000Z</published>
    <updated>2017-11-03T17:09:06.144Z</updated>
    
    <content type="html"><![CDATA[<h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a><strong>参数说明</strong></h4><h4 id="redis-conf-配置项说明如下："><a href="#redis-conf-配置项说明如下：" class="headerlink" title="redis.conf 配置项说明如下："></a>redis.conf 配置项说明如下：</h4><ol><li>Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程<blockquote><p>daemonize no</p></blockquote></li></ol><ol><li>当Redis以守护进程方式运行时，Redis默认会把pid写入/var/run/redis.pid文件，可以通过pidfile指定<blockquote><p>pidfile /var/run/redis.pid</p></blockquote></li></ol><ol><li>指定Redis监听端口，默认端口为6379，作者在自己的一篇博文中解释了为什么选用6379作为默认端口，因为6379在手机按键上MERZ对应的号码，而MERZ取自意大利歌女Alessia Merz的名字<blockquote><p>port 6379</p></blockquote></li></ol><ol><li><p>绑定的主机地址</p><blockquote><p>bind 127.0.0.1</p></blockquote></li><li><p>当 客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能</p><blockquote><p>timeout 300</p></blockquote></li><li><p>指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose</p><blockquote><p>loglevel verbose</p></blockquote></li><li><p>日志记录方式，默认为标准输出，如果配置Redis为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给/dev/null</p><blockquote><p>logfile stdout</p></blockquote></li><li><p>设置数据库的数量，默认数据库为0，可以使用SELECT dbid命令在连接上指定数据库id</p><blockquote><p>databases 16</p></blockquote></li><li><p>指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</p><blockquote><p>save <seconds> <changes><br>Redis默认配置文件中提供了三个条件：<br>save 900 1<br>save 300 10<br>save 60 10000<br>分别表示900秒（15分钟）内有1个更改，300秒（5分钟）内有10个更改以及60秒内有10000个更改。</changes></seconds></p></blockquote></li></ol><ol><li><p>指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大</p><blockquote><p>rdbcompression yes</p></blockquote></li><li><p>指定本地数据库文件名，默认值为dump.rdb</p><blockquote><p>dbfilename dump.rdb</p></blockquote></li><li><p>指定本地数据库存放目录</p><blockquote><p>dir ./</p></blockquote></li><li><p>设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步</p><blockquote><p> slaveof <masterip> <masterport></masterport></masterip></p></blockquote></li><li><p>当master服务设置了密码保护时，slav服务连接master的密码</p><blockquote><p>masterauth  <master-password></master-password></p></blockquote></li><li><p>设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH <password>命令提供密码，默认关闭</password></p><blockquote><p>requirepass foobared</p></blockquote></li><li><p>设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis会关闭新的连接并向客户端返回max number of clients reached错误信息</p><blockquote><p>maxclients 128</p></blockquote></li><li><p>指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区</p><blockquote><p>maxmemory <bytes></bytes></p></blockquote></li><li><p>指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no</p><blockquote><p>appendonly no</p></blockquote></li><li><p>指定更新日志文件名，默认为appendonly.aof</p><blockquote><p>appendfilename appendonly.aof</p></blockquote></li><li><p>指定更新日志条件，共有3个可选值： </p><blockquote><p>no：表示等操作系统进行数据缓存同步到磁盘（快）<br>always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）<br>everysec：表示每秒同步一次（折衷，默认值）<br>appendfsync everysec</p></blockquote></li></ol><ol><li><p>指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析Redis的VM机制）</p><blockquote><p> vm-enabled no</p></blockquote></li><li><p>虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享</p><blockquote><p>  vm-swap-file /tmp/redis.swap</p></blockquote></li><li><p>将所有大于vm-max-memory的数据存入虚拟内存,无论vm-max-memory设置多小,所有索引数据都是内存存储的(Redis的索引数据 就是keys),也就是说,当vm-max-memory设置为0的时候,其实是所有value都存在于磁盘。默认值为0</p><blockquote><p> vm-max-memory 0</p></blockquote></li><li><p>Redis swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不 确定，就使用默认值</p><blockquote><p>vm-page-size 32</p></blockquote></li><li><p>设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，，在磁盘上每8个pages将消耗1byte的内存。</p><blockquote><p>vm-pages 134217728</p></blockquote></li><li><p>设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4</p><blockquote><p>vm-max-threads 4</p></blockquote></li><li><p>设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启</p><blockquote><p>glueoutputbuf yes</p></blockquote></li><li><p>指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法</p><blockquote><p>hash-max-zipmap-entries 64<br>hash-max-zipmap-value 512</p></blockquote></li><li><p>指定是否激活重置哈希，默认为开启（后面在介绍Redis的哈希算法时具体介绍）</p><blockquote><p>activerehashing yes</p></blockquote></li><li><p>指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件</p><blockquote><p>include /path/to/local.conf</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;参数说明&quot;&gt;&lt;a href=&quot;#参数说明&quot; class=&quot;headerlink&quot; title=&quot;参数说明&quot;&gt;&lt;/a&gt;&lt;strong&gt;参数说明&lt;/strong&gt;&lt;/h4&gt;&lt;h4 id=&quot;redis-conf-配置项说明如下：&quot;&gt;&lt;a href=&quot;#redis-con
      
    
    </summary>
    
      <category term="redis" scheme="http://yoursite.com/categories/redis/"/>
    
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Maven+SSM（SpringMVC+Spring+Mybatis） 框架整合</title>
    <link href="http://yoursite.com/2017/10/31/Maven+SSM%EF%BC%88SpringMVC+Spring+Mybatis%EF%BC%89%20%E6%A1%86%E6%9E%B6%E6%95%B4%E5%90%88/"/>
    <id>http://yoursite.com/2017/10/31/Maven+SSM（SpringMVC+Spring+Mybatis） 框架整合/</id>
    <published>2017-10-31T08:37:01.000Z</published>
    <updated>2017-11-03T17:26:11.069Z</updated>
    
    <content type="html"><![CDATA[<h4 id="在整合之前先介绍一下Maven"><a href="#在整合之前先介绍一下Maven" class="headerlink" title="在整合之前先介绍一下Maven:"></a><strong>在整合之前先介绍一下Maven:</strong></h4><blockquote><p>Maven是一个项目管理工具，它包含了一个项目对象模型 (Project Object Model)，一组标准集合，一个项目生命周期(Project Lifecycle)，一个依赖管理系统(Dependency Management System)，和用来运行定义在生命周期阶段(phase)中插件(plugin)目标(goal)的逻辑。当你使用Maven的时候，你用一个明确定义的项目对象模型来描述你的项目，然后Maven可以应用横切的逻辑，这些逻辑来自一组共享的（或者自定义的）插件。<br> Maven 有一个生命周期，当你运行 mvn install 的时候被调用。这条命令告诉 Maven 执行一系列的有序的步骤，直到到达你指定的生命周期。遍历生命周期旅途中的一个影响就是，Maven 运行了许多默认的插件目标，这些目标完成了像编译和创建一个 JAR 文件这样的工作。<br>此外，Maven能够很方便的帮你管理项目报告，生成站点，管理JAR文件，等等。：</p></blockquote><p>常用命令:</p><blockquote><p>mvn archetype:generate 创建Maven项目<br>mvn compile 编译源代码<br>mvn deploy 发布项目<br>mvn test-compile 编译测试源代码<br>mvn test 运行应用程序中的单元测试<br>mvn site 生成项目相关信息的网站<br>mvn clean 清除项目目录中的生成结果<br>mvn package 根据项目生成的jar<br>mvn install 在本地Repository中安装jar<br>mvn eclipse:eclipse 生成eclipse项目文件<br>mvnjetty:run 启动jetty服务<br>mvntomcat:run 启动tomcat服务<br>mvn clean package -Dmaven.test.skip=true:清除以前的包后重新打包，跳过测试类</p></blockquote><p>好Maven就介绍到这里！！！</p><h4 id="Spring-SpringMVC-Mybatis基本概念"><a href="#Spring-SpringMVC-Mybatis基本概念" class="headerlink" title="Spring SpringMVC Mybatis基本概念"></a><strong>Spring SpringMVC Mybatis基本概念</strong></h4><p>1、Spring</p><pre><code>Spring是一个开源框架，Spring是于2003 年兴起的一个轻量级的Java 开发框架，由Rod Johnson 在其著作Expert One-On-One J2EE Development and Design中阐述的部分理念和原型衍生而来。它是为了解决企业应用开发的复杂性而创建的。Spring使用基本的JavaBean来完成以前只可能由EJB完成的事情。然而，Spring的用途不仅限于服务器端的开发。从简单性、可测试性和松耦合的角度而言，任何Java应用都可以从Spring中受益。 简单来说，Spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器框架。</code></pre><p>2、SpringMVC</p><pre><code>Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring MVC 分离了控制器、模型对象、分派器以及处理程序对象的角色，这种分离让它们更容易进行定制。</code></pre><p>3、MyBatis</p><pre><code>MyBatis 本是apache的一个开源项目iBatis, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。MyBatis是一个基于Java的持久层框架。iBATIS提供的持久层框架包括SQL Maps和Data Access Objects（DAO）MyBatis 消除了几乎所有的JDBC代码和参数的手工设置以及结果集的检索。MyBatis 使用简单的 XML或注解用于配置和原始映射，将接口和 Java 的POJOs（Plain Old Java Objects，普通的 Java对象）映射成数据库中的记录。</code></pre><h4 id="SSM整合在这使用的开发工具是idea"><a href="#SSM整合在这使用的开发工具是idea" class="headerlink" title="SSM整合在这使用的开发工具是idea"></a><strong>SSM整合在这使用的开发工具是idea</strong></h4><p>新建一个maven工程（在这就省略了）：</p><blockquote><p>在这说明一点创建完之后文件夹有些不完整需要自己创建java源文件目录还有测试（test）目录</p></blockquote><h5 id="先从pom-xml文件入手"><a href="#先从pom-xml文件入手" class="headerlink" title="先从pom.xml文件入手"></a><strong>先从pom.xml文件入手</strong></h5><p>具体需要加入什么jar，看自己的功能所需 , 可以到官网查<a href="https://mvnrepository.com" target="_blank" rel="external">https://mvnrepository.com</a></p><p>下面是我pom.xml的内容（包括spring+springmvc+mybatis等相关jar包）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div></pre></td><td class="code"><pre><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;</div><div class="line">    &lt;parent&gt;</div><div class="line">        &lt;artifactId&gt;idea_maven&lt;/artifactId&gt;</div><div class="line">        &lt;groupId&gt;com.hfbin.maven&lt;/groupId&gt;</div><div class="line">        &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</div><div class="line">    &lt;/parent&gt;</div><div class="line">    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line">    &lt;artifactId&gt;idea_maven01&lt;/artifactId&gt;</div><div class="line">    &lt;packaging&gt;war&lt;/packaging&gt;</div><div class="line">    &lt;name&gt;idea_maven01 Maven Webapp&lt;/name&gt;</div><div class="line">    &lt;url&gt;http://maven.apache.org&lt;/url&gt;</div><div class="line">    &lt;dependencies&gt;</div><div class="line"></div><div class="line">        &lt;!-- ueditor 编辑器--&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/cn.songxinqiang/com.baidu.ueditor --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;cn.songxinqiang&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;com.baidu.ueditor&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.1.2-offical&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.json/json --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.json&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;json&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;20160810&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line"></div><div class="line">        &lt;!-- 文件上传--&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;commons-fileupload&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;commons-fileupload&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.3.1&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/commons-codec/commons-codec --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;commons-codec&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;commons-codec&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.10&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!--引入pageHelper分页插件 --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;com.github.pagehelper&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;pagehelper&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;5.0.0&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!-- MBG --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.3.5&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;4.3.7.RELEASE&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!-- 返回json字符串的支持 --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;2.8.8&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!--JSR303数据校验支持；tomcat7及以上的服务器，</div><div class="line">        tomcat7以下的服务器：el表达式。额外给服务器的lib包中替换新的标准的el</div><div class="line">        --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-validator --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.hibernate&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;hibernate-validator&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;5.4.1.Final&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line"></div><div class="line">        &lt;!-- Spring-Jdbc --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-jdbc&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;4.3.7.RELEASE&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!--Spring-test --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-test --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-test&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;4.3.7.RELEASE&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line"></div><div class="line">        &lt;!-- Spring面向切面编程 --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-aspects --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;spring-aspects&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;4.3.7.RELEASE&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!--MyBatis --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;mybatis&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;3.4.2&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;!-- MyBatis整合Spring的适配包 --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;org.mybatis&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;mybatis-spring&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.3.1&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!-- 数据库连接池、驱动 --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/c3p0/c3p0 --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;c3p0&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;c3p0&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;0.9.1&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;5.1.41&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">        &lt;!-- （jstl，servlet-api，junit） --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/jstl/jstl --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;jstl&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;1.2&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;3.0.1&lt;/version&gt;</div><div class="line">            &lt;scope&gt;provided&lt;/scope&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">        &lt;!-- junit --&gt;</div><div class="line">        &lt;!-- https://mvnrepository.com/artifact/junit/junit --&gt;</div><div class="line">        &lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</div><div class="line">            &lt;version&gt;4.12&lt;/version&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line"></div><div class="line">    &lt;/dependencies&gt;</div><div class="line">    &lt;build&gt;</div><div class="line">        &lt;finalName&gt;mybatis_generator&lt;/finalName&gt;</div><div class="line">        &lt;plugins&gt;</div><div class="line">            &lt;plugin&gt;</div><div class="line">                &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt;</div><div class="line">                &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt;</div><div class="line">                &lt;version&gt;1.3.2&lt;/version&gt;</div><div class="line">                &lt;configuration&gt;</div><div class="line">                    &lt;verbose&gt;true&lt;/verbose&gt;</div><div class="line">                    &lt;overwrite&gt;true&lt;/overwrite&gt;</div><div class="line">                &lt;/configuration&gt;</div><div class="line">            &lt;/plugin&gt;</div><div class="line">        &lt;/plugins&gt;</div><div class="line">    &lt;/build&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure><h4 id="在resources-下创建mybatis-config-xml配置文件："><a href="#在resources-下创建mybatis-config-xml配置文件：" class="headerlink" title="在resources 下创建mybatis-config.xml配置文件："></a><strong>在resources 下创建mybatis-config.xml配置文件：</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE configuration</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</div><div class="line">&lt;configuration&gt;</div><div class="line">&lt;settings&gt;</div><div class="line">&lt;!--开启驼峰命名转换--&gt;</div><div class="line">&lt;setting name=&quot;mapUnderscoreToCamelCase&quot; value=&quot;true&quot;/&gt;</div><div class="line">&lt;/settings&gt;</div><div class="line">&lt;!--指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean--&gt;</div><div class="line">&lt;typeAliases&gt;</div><div class="line">&lt;package name=&quot;cn.hfbin.crud.bean&quot;/&gt;</div><div class="line">&lt;/typeAliases&gt;</div><div class="line">&lt;!--这个是放mybatis的插件--&gt;</div><div class="line">&lt;plugins&gt;</div><div class="line">&lt;!--分页插件--&gt;</div><div class="line">&lt;plugin interceptor=&quot;com.github.pagehelper.PageInterceptor&quot;&gt;</div><div class="line">&lt;!--分页参数合理化  --&gt;</div><div class="line">&lt;property name=&quot;reasonable&quot; value=&quot;true&quot;/&gt;</div><div class="line">&lt;/plugin&gt;</div><div class="line">&lt;/plugins&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure><h4 id="在resources-下创建applicationContext-xml配置文件："><a href="#在resources-下创建applicationContext-xml配置文件：" class="headerlink" title="在resources 下创建applicationContext.xml配置文件："></a><strong>在resources 下创建applicationContext.xml配置文件：</strong></h4><p>spring的配置文件 ，这里主要配置和业务逻辑有关的 :</p><blockquote><p>配置数据库数据<br>配置Spring和MyBatis的整合<br>置扫描器，将mybatis接口的实现加入到ioc容器中<br>配置一个可以执行批量的sqlSession<br>配置事务控制<br>开启基于注解的事务，使用xml配置形式的事务<br>配置事务增强，事务如何切入<br>配置MultipartReaolver 文件上传配置<br>………</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class="line">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class="line">       xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;</div><div class="line">       xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;</div><div class="line">       xsi:schemaLocation=&quot;http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd</div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd</div><div class="line">http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd</div><div class="line">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;&gt;</div><div class="line">    &lt;!--自动扫描包--&gt;</div><div class="line">    &lt;context:component-scan base-package=&quot;cn.hfbin.crud&quot;&gt;</div><div class="line">        &lt;!--除了描控制器不扫描外 其它全部扫描--&gt;</div><div class="line">        &lt;context:exclude-filter type=&quot;annotation&quot;</div><div class="line">                                expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;</div><div class="line">    &lt;/context:component-scan&gt;</div><div class="line"></div><div class="line">    &lt;!-- Spring的配置文件，这里主要配置和业务逻辑有关的 --&gt;</div><div class="line">    &lt;!--=================== 数据源，事务控制，xxx ================--&gt;</div><div class="line">    &lt;context:property-placeholder location=&quot;classpath:dbconfig.properties&quot;/&gt;</div><div class="line">    &lt;bean id=&quot;pooledDataSource&quot; class=&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;&gt;</div><div class="line">        &lt;property name=&quot;jdbcUrl&quot; value=&quot;$&#123;jdbc.jdbcUrl&#125;&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;property name=&quot;driverClass&quot; value=&quot;$&#123;jdbc.driverClass&#125;&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;property name=&quot;user&quot; value=&quot;$&#123;jdbc.user&#125;&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;property name=&quot;password&quot; value=&quot;$&#123;jdbc.password&#125;&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!-- 其他配置 --&gt;</div><div class="line">        &lt;!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 --&gt;</div><div class="line">        &lt;property name=&quot;initialPoolSize&quot; value=&quot;3&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!--连接池中保留的最小连接数。Default: 3 --&gt;</div><div class="line">        &lt;property name=&quot;minPoolSize&quot; value=&quot;3&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!--连接池中保留的最大连接数。Default: 15 --&gt;</div><div class="line">        &lt;property name=&quot;maxPoolSize&quot; value=&quot;20&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 --&gt;</div><div class="line">        &lt;property name=&quot;acquireIncrement&quot; value=&quot;3&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 --&gt;</div><div class="line">        &lt;property name=&quot;maxStatements&quot; value=&quot;8&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!-- maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 --&gt;</div><div class="line">        &lt;property name=&quot;maxStatementsPerConnection&quot; value=&quot;5&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --&gt;</div><div class="line">        &lt;property name=&quot;maxIdleTime&quot; value=&quot;1800&quot;&gt;&lt;/property&gt;</div><div class="line">    &lt;/bean&gt;</div><div class="line"></div><div class="line">    &lt;!--================== 配置和MyBatis的整合=============== --&gt;</div><div class="line">    &lt;bean id=&quot;sqlSessionFactory&quot; class=&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;&gt;</div><div class="line">        &lt;!-- 指定mybatis全局配置文件的位置 --&gt;</div><div class="line">        &lt;property name=&quot;configLocation&quot; value=&quot;classpath:mybatis-config.xml&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;pooledDataSource&quot;&gt;&lt;/property&gt;</div><div class="line">        &lt;!-- 指定mybatis，mapper文件的位置 --&gt;</div><div class="line">        &lt;property name=&quot;mapperLocations&quot; value=&quot;classpath:mapper/*.xml&quot;&gt;&lt;/property&gt;</div><div class="line">    &lt;/bean&gt;</div><div class="line"></div><div class="line">    &lt;!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 --&gt;</div><div class="line">    &lt;bean class=&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;&gt;</div><div class="line">        &lt;!--扫描所有dao接口的实现，加入到ioc容器中 --&gt;</div><div class="line">        &lt;property name=&quot;basePackage&quot; value=&quot;cn.hfbin.crud.dao&quot;&gt;&lt;/property&gt;</div><div class="line">    &lt;/bean&gt;</div><div class="line"></div><div class="line">    &lt;!-- 配置一个可以执行批量的sqlSession --&gt;</div><div class="line">    &lt;bean id=&quot;sqlSession&quot; class=&quot;org.mybatis.spring.SqlSessionTemplate&quot;&gt;</div><div class="line">        &lt;constructor-arg name=&quot;sqlSessionFactory&quot; ref=&quot;sqlSessionFactory&quot;&gt;&lt;/constructor-arg&gt;</div><div class="line">        &lt;constructor-arg name=&quot;executorType&quot; value=&quot;BATCH&quot;&gt;&lt;/constructor-arg&gt;</div><div class="line">    &lt;/bean&gt;</div><div class="line">    &lt;!--=============================================  --&gt;</div><div class="line"></div><div class="line">    &lt;!-- ===============事务控制的配置 ================--&gt;</div><div class="line">    &lt;bean id=&quot;transactionManager&quot; class=&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;&gt;</div><div class="line">        &lt;!--控制住数据源  --&gt;</div><div class="line">        &lt;property name=&quot;dataSource&quot; ref=&quot;pooledDataSource&quot;&gt;&lt;/property&gt;</div><div class="line">    &lt;/bean&gt;</div><div class="line">    &lt;!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）  --&gt;</div><div class="line">    &lt;aop:config&gt;</div><div class="line">        &lt;!-- 切入点表达式 --&gt;</div><div class="line">        &lt;aop:pointcut expression=&quot;execution(* cn.hfbin.crud.service..*(..))&quot; id=&quot;txPoint&quot;/&gt;</div><div class="line">        &lt;!-- 配置事务增强 --&gt;</div><div class="line">        &lt;aop:advisor advice-ref=&quot;txAdvice&quot; pointcut-ref=&quot;txPoint&quot;/&gt;</div><div class="line">    &lt;/aop:config&gt;</div><div class="line"></div><div class="line">    &lt;!--配置事务增强，事务如何切入  --&gt;</div><div class="line">    &lt;tx:advice id=&quot;txAdvice&quot; transaction-manager=&quot;transactionManager&quot;&gt;</div><div class="line">        &lt;tx:attributes&gt;</div><div class="line">            &lt;!-- 所有方法都是事务方法 --&gt;</div><div class="line">            &lt;tx:method name=&quot;*&quot;/&gt;</div><div class="line">            &lt;!--以get开始的所有方法  --&gt;</div><div class="line">            &lt;tx:method name=&quot;get*&quot; read-only=&quot;true&quot;/&gt;</div><div class="line">        &lt;/tx:attributes&gt;</div><div class="line">    &lt;/tx:advice&gt;</div><div class="line">    &lt;!-- Spring配置文件的核心点（数据源、与mybatis的整合，事务控制） --&gt;</div><div class="line">&lt;/beans&gt;</div></pre></td></tr></table></figure><h4 id="在webapp-WEB-INFO-下创建springmvc-servlet-xml配置文件："><a href="#在webapp-WEB-INFO-下创建springmvc-servlet-xml配置文件：" class="headerlink" title="在webapp/WEB-INFO/ 下创建springmvc-servlet.xml配置文件："></a><strong>在webapp/WEB-INFO/ 下创建springmvc-servlet.xml配置文件：</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class="line">xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class="line">xmlns:mvc=&quot;http://www.springframework.org/schema/mvc&quot;</div><div class="line">xsi:schemaLocation=&quot;http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd</div><div class="line">http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class="line">http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd&quot;&gt;</div><div class="line">&lt;!-- SpringMVC 的配置文件 ，包含网站跳转的逻辑控制器 --&gt;</div><div class="line">&lt;context:component-scan base-package=&quot;cn.hfbin&quot; use-default-filters=&quot;false&quot;&gt;</div><div class="line">&lt;!-- 只扫描控制器 --&gt;</div><div class="line">&lt;context:include-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;</div><div class="line">&lt;/context:component-scan&gt;</div><div class="line">&lt;!-- 视图解析器 --&gt;</div><div class="line">&lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&gt;</div><div class="line">&lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/view/&quot;&gt;&lt;/property&gt;</div><div class="line">&lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;&gt;&lt;/property&gt;</div><div class="line">&lt;/bean&gt;</div><div class="line"></div><div class="line">&lt;!-- 两个标准配置 --&gt;</div><div class="line">&lt;!-- 将springmvc不能处理的请求交给tomcat --&gt;</div><div class="line">&lt;mvc:default-servlet-handler/&gt;</div><div class="line">&lt;!-- 能支持springmvc更高级的一些功能：JSR303校验  ，快捷的ajax ，映射动态请求--&gt;</div><div class="line">&lt;mvc:annotation-driven/&gt;</div><div class="line">&lt;/beans&gt;</div></pre></td></tr></table></figure><h4 id="修改webapp-WEB-INFO-下web-xml配置文件："><a href="#修改webapp-WEB-INFO-下web-xml配置文件：" class="headerlink" title="修改webapp/WEB-INFO/ 下web.xml配置文件："></a><strong>修改webapp/WEB-INFO/ 下web.xml配置文件：</strong></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;</div><div class="line">         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;</div><div class="line">         id=&quot;WebApp_ID&quot; version=&quot;2.5&quot;&gt;</div><div class="line">    &lt;!-- 启动spring容器 --&gt;</div><div class="line">    &lt;!-- needed for ContextLoaderListener --&gt;</div><div class="line">    &lt;context-param&gt;</div><div class="line">        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</div><div class="line">        &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;</div><div class="line">    &lt;/context-param&gt;</div><div class="line"></div><div class="line">    &lt;!-- Bootstraps the root web application context before servlet initialization --&gt;</div><div class="line">    &lt;listener&gt;</div><div class="line">        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;</div><div class="line">    &lt;/listener&gt;</div><div class="line"></div><div class="line">    &lt;!-- 启动springmvc的前端控制器 ，拦截所有请求 --&gt;</div><div class="line"></div><div class="line">    &lt;!-- The front controller of this Spring Web application, responsible for</div><div class="line">        handling all application requests --&gt;</div><div class="line">    &lt;servlet&gt;</div><div class="line">        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;</div><div class="line">        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;</div><div class="line">        &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</div><div class="line">    &lt;/servlet&gt;</div><div class="line"></div><div class="line">    &lt;!-- Map all requests to the DispatcherServlet for handling --&gt;</div><div class="line">    &lt;servlet-mapping&gt;</div><div class="line">        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;</div><div class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</div><div class="line">    &lt;/servlet-mapping&gt;</div><div class="line">    &lt;!-- 编码过滤器 --&gt;</div><div class="line">    &lt;filter&gt;</div><div class="line">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</div><div class="line">        &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</div><div class="line">        &lt;init-param&gt;</div><div class="line">            &lt;param-name&gt;encoding&lt;/param-name&gt;</div><div class="line">            &lt;param-value&gt;utf-8&lt;/param-value&gt;</div><div class="line">        &lt;/init-param&gt;</div><div class="line">        &lt;init-param&gt;</div><div class="line">            &lt;param-name&gt;forceRequestEncoding&lt;/param-name&gt;</div><div class="line">            &lt;param-value&gt;true&lt;/param-value&gt;</div><div class="line">        &lt;/init-param&gt;</div><div class="line">        &lt;init-param&gt;</div><div class="line">            &lt;param-name&gt;forceResponseEncoding&lt;/param-name&gt;</div><div class="line">            &lt;param-value&gt;true&lt;/param-value&gt;</div><div class="line">        &lt;/init-param&gt;</div><div class="line">    &lt;/filter&gt;</div><div class="line">    &lt;filter-mapping&gt;</div><div class="line">        &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</div><div class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</div><div class="line">    &lt;/filter-mapping&gt;</div><div class="line"></div><div class="line">    &lt;!-- 使用Rest风格的URL --&gt;</div><div class="line">    &lt;filter&gt;</div><div class="line">        &lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</div><div class="line">        &lt;filter-class&gt;org.springframework.web.filter.HiddenHttpMethodFilter&lt;/filter-class&gt;</div><div class="line">    &lt;/filter&gt;</div><div class="line">    &lt;filter-mapping&gt;</div><div class="line">        &lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</div><div class="line">        &lt;url-pattern&gt;/&lt;/url-pattern&gt;</div><div class="line">    &lt;/filter-mapping&gt;</div><div class="line">&lt;/web-app&gt;</div></pre></td></tr></table></figure><p>注意（这里加入了支持Rest风格的URL 的配置）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;filter&gt;</div><div class="line">        &lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</div><div class="line">        &lt;filter-class&gt;org.springframework.web.filter.HiddenHttpMethodFilter&lt;/filter-class&gt;</div><div class="line">&lt;/filter&gt;</div><div class="line">&lt;filter-mapping&gt;</div><div class="line">    &lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</div><div class="line">    &lt;url-pattern&gt;/&lt;/url-pattern&gt;</div><div class="line">&lt;/filter-mapping&gt;</div></pre></td></tr></table></figure><p>到这目前已经整合结束了 只剩下测试了！</p><h5 id="由于是新创建的项目Tomcat跟Maven都要重新配。在这教一下大家如何配置Tomcat跟Maven运行配置"><a href="#由于是新创建的项目Tomcat跟Maven都要重新配。在这教一下大家如何配置Tomcat跟Maven运行配置" class="headerlink" title="由于是新创建的项目Tomcat跟Maven都要重新配。在这教一下大家如何配置Tomcat跟Maven运行配置"></a><strong>由于是新创建的项目Tomcat跟Maven都要重新配。在这教一下大家如何配置Tomcat跟Maven运行配置</strong></h5><h4 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h4><p>第一步</p><p><img src="http://img.blog.csdn.net/20171027015015915?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第二步</p><p><img src="http://img.blog.csdn.net/20171027020331178?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第三步(第二步双击后出现下面图)<br><img src="http://img.blog.csdn.net/20171027020342153?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第四步</p><p><img src="http://img.blog.csdn.net/20171027020354516?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第五步</p><p><img src="http://img.blog.csdn.net/20171027020404022?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第六步</p><p><img src="http://img.blog.csdn.net/20171027020436211?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>到这完成tomcat 的配置<br><img src="http://img.blog.csdn.net/20171027020654010?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h4 id="maven运行配置"><a href="#maven运行配置" class="headerlink" title="maven运行配置"></a>maven运行配置</h4><p>具体下载安装以及本地库在这不做详细介绍，maven官网下载地址<a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">http://maven.apache.org/download.cgi</a></p><p>idea跟maven的配置在这不做详细介绍，在这只做<strong><em>运行配置</em></strong></p><p>第一步</p><p><img src="http://img.blog.csdn.net/20171027022437583?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第二步</p><p><img src="http://img.blog.csdn.net/20171027022448076?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>第三步</p><p><img src="http://img.blog.csdn.net/20171027022458171?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>maven运行配置完成</p><p><img src="http://img.blog.csdn.net/20171027022510544?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>现在两个都配置好了</p><p>把maven跑起来<br><img src="http://img.blog.csdn.net/20171027023454691?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>这时把Tomcat也跑起来 ，此时报了一个错，就是没有找到mapper/*.xml文件。这时打开applicationContext.xml,找到对应错误的行数 。<br>如下图：</p><p><img src="http://img.blog.csdn.net/20171027095142552?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>把提示错误这行注释掉，再重启Tomcat即可</p><p><img src="http://img.blog.csdn.net/20171027095656598?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>到这为止可以简单的测试一下前端是否可以顺利的与后台交互</p><p>在webapp/WEB-INFO/ 下创建一个views文件夹在里面新建一个jsp页面<br>index.jsp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;%--</div><div class="line">  Created by IntelliJ IDEA.</div><div class="line">  User: HuangFuBin</div><div class="line">  Date: 2017/10/27</div><div class="line">  Time: 2:28</div><div class="line">  To change this template use File | Settings | File Templates.</div><div class="line">--%&gt;</div><div class="line">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;title&gt;Title&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">      &lt;h1 style=&quot;text-align: center ; margin-top: 100px;&quot;&gt;Spring + SpringMVC + Mybatis 整合完成&lt;/h1&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure><p>在cn.hfbin.controller包下创建一个IndexController类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">package cn.hfbin.crud.controller;</div><div class="line"></div><div class="line">import org.springframework.stereotype.Controller;</div><div class="line">import org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"></div><div class="line">@Controller</div><div class="line">public class IndexController &#123;</div><div class="line"></div><div class="line">    @RequestMapping(&quot;/index&quot;)</div><div class="line">    public String index()&#123;</div><div class="line">        System.out.println(&quot;进入Controller&quot;);</div><div class="line">        return &quot;index&quot;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如图</p><p><img src="http://img.blog.csdn.net/20171027101137204?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>重启一下tomcat 到页面进行测试，测试结果如下</p><p><img src="http://img.blog.csdn.net/20171027101812625?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>其实到这只能说明一点Spring跟SpringMVC整合完美成功！！！！</p><h4 id="要跟Mybatis整合还是需要一个案例讲解，在后面的时间段里我会通过讲解ssm的一个crud来详细的介绍Mybatis"><a href="#要跟Mybatis整合还是需要一个案例讲解，在后面的时间段里我会通过讲解ssm的一个crud来详细的介绍Mybatis" class="headerlink" title="要跟Mybatis整合还是需要一个案例讲解，在后面的时间段里我会通过讲解ssm的一个crud来详细的介绍Mybatis."></a>要跟Mybatis整合还是需要一个案例讲解，在后面的时间段里我会通过讲解ssm的一个crud来详细的介绍Mybatis.</h4><h4 id="上面只是介绍了mybatis跟spring配置，在此希望你能关注我，下一篇文章会着重的介绍mybatis。"><a href="#上面只是介绍了mybatis跟spring配置，在此希望你能关注我，下一篇文章会着重的介绍mybatis。" class="headerlink" title="上面只是介绍了mybatis跟spring配置，在此希望你能关注我，下一篇文章会着重的介绍mybatis。"></a>上面只是介绍了mybatis跟spring配置，在此希望你能关注我，下一篇文章会着重的介绍mybatis。</h4><p><strong>如果你等不及我更新可以先到我的GiuHub上面看我的源码</strong>  <a href="https://github.com/hfbin/SSM-crud" target="_blank" rel="external">https://github.com/hfbin/SSM-crud</a><br><img src="http://img.blog.csdn.net/20171027110002365?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="效果图："><a href="#效果图：" class="headerlink" title="效果图："></a><strong>效果图：</strong></h3><p><img src="http://img.blog.csdn.net/20171027110436398?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>下一章会着重介绍mybatis</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;在整合之前先介绍一下Maven&quot;&gt;&lt;a href=&quot;#在整合之前先介绍一下Maven&quot; class=&quot;headerlink&quot; title=&quot;在整合之前先介绍一下Maven:&quot;&gt;&lt;/a&gt;&lt;strong&gt;在整合之前先介绍一下Maven:&lt;/strong&gt;&lt;/h4&gt;&lt;b
      
    
    </summary>
    
      <category term="SSM+Maven" scheme="http://yoursite.com/categories/SSM-Maven/"/>
    
    
      <category term="Spring" scheme="http://yoursite.com/tags/Spring/"/>
    
      <category term="SpringMVC" scheme="http://yoursite.com/tags/SpringMVC/"/>
    
      <category term="Mybatis" scheme="http://yoursite.com/tags/Mybatis/"/>
    
      <category term="Maven" scheme="http://yoursite.com/tags/Maven/"/>
    
      <category term="SSM" scheme="http://yoursite.com/tags/SSM/"/>
    
  </entry>
  
  <entry>
    <title>基于liunx的git操作</title>
    <link href="http://yoursite.com/2017/10/31/%E5%9F%BA%E4%BA%8Eliunx%E7%9A%84git%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/10/31/基于liunx的git操作/</id>
    <published>2017-10-31T04:43:19.000Z</published>
    <updated>2017-11-03T17:06:39.176Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在liunx下安装git"><a href="#在liunx下安装git" class="headerlink" title="在liunx下安装git"></a>在liunx下安装git</h3><ul><li>yum install git </li></ul><h3 id="克隆GitHub上的项目到liunx下："><a href="#克隆GitHub上的项目到liunx下：" class="headerlink" title="克隆GitHub上的项目到liunx下："></a>克隆GitHub上的项目到liunx下：</h3><p>第一步先复制链接<br><img src="http://img.blog.csdn.net/20171025162416272?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="复制GitHub的链接"><br>第二步在liunx下克隆项目（最好先创建一个克隆的文件夹）：<br>命令：git clone <a href="https://github.com/hfbin/ThirdPartyLogin.git" target="_blank" rel="external">https://github.com/hfbin/ThirdPartyLogin.git</a><br><img src="http://img.blog.csdn.net/20171025163230709?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="Liunx环境下更新github项目"><a href="#Liunx环境下更新github项目" class="headerlink" title="Liunx环境下更新github项目"></a>Liunx环境下更新github项目</h3><p> <img src="http://img.blog.csdn.net/20171025163300481?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> 执行git commit 后：<br> <img src="http://img.blog.csdn.net/20171025163312117?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> ：wq 保存后：<br> <img src="http://img.blog.csdn.net/20171025163326714?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br> 本地提交 git push：<br><img src="http://img.blog.csdn.net/20171025163413451?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br>输入用户名密码即可发布到GitHub上：<br><img src="http://img.blog.csdn.net/20171025163546162?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h3 id="到GitHub上查看项目是否更新"><a href="#到GitHub上查看项目是否更新" class="headerlink" title="到GitHub上查看项目是否更新"></a>到GitHub上查看项目是否更新</h3><p><img src="http://img.blog.csdn.net/20171025163633277?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvcXFfMzM1MjQxNTg=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>大功告成 ！！！！</p><p>转发者必须注明转发链接</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在liunx下安装git&quot;&gt;&lt;a href=&quot;#在liunx下安装git&quot; class=&quot;headerlink&quot; title=&quot;在liunx下安装git&quot;&gt;&lt;/a&gt;在liunx下安装git&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;yum install git &lt;/li&gt;
&lt;/
      
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
</feed>
